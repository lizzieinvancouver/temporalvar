##
## time-varying env variables
##
R0 <- matrix(rep(5), nyrs,1) # rlnorm(nyrs, 1, 1) # intial R in a season
eps <- 1              # evaporative stress
tauP <- 0.3           # timing of pulse
##
## Within-growing season dynamics set-up
##
R <- matrix(rep(0), nyrs, ndays/dt) # R is the resource level through the growing season (each yr)
B <- array(rep(0), dim=c(nyrs,n,ndays/dt)) # where B is an array with yr (nyrs), spp biomass
# through growing season (ndays)
N <- matrix(rep(0), nyrs, n) # number of seeds by yr and spp
Bfin <- matrix(rep(0),nyrs,n) # biomass at end of year y
##
## change to mapply someday?
## for now, a loop
##
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t))
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f + eps*R[y,t-1])
J <- which(R[y, t-1]-Rstar < 0)
B[y,,t][J] <- 0
}
Bfin[y,] <- apply(B[y,,], 1, max)
}
R <- seq(0,10,.01)
a <- 20
d <- 1
theta <- c(1,2,3)
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R)
plot(f~R, type='l')
d <- .5
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l')
theta <- 1
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l')
plot(f~R, type='l',clr='r')
plot(f~R, type='l',col='r')
plot(f~R, type='l',col='red')
plot(f~R, type='l',col='red')
theta <- 1
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l')
theta <- 2
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l',col='red')
theta <- 1
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l')
par(new=F)
theta <- 2
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l',col='red')
theta <- 1
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l')
par(new=F)
theta <- 2
f <- a*R^(theta)/(1+a*d*R^theta)
linr(f~R, type='l',col='red')
line(f~R, type='l',col='red')
line(R,f, type='l',col='red')
points(R,f, type='l',col='red')
theta <- 3
f <- a*R^(theta)/(1+a*d*R^theta)
points(R,f, type='l',col='blue')
a <- 2
theta <- 1
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l')
par(new=F)
theta <- 2
f <- a*R^(theta)/(1+a*d*R^theta)
points(R,f, type='l',col='red')
theta <- 3
f <- a*R^(theta)/(1+a*d*R^theta)
points(R,f, type='l',col='blue')
theta <- 3
f <- a*R^(theta)/(1+a*d*R^theta)
plot(f~R, type='l')
par(new=F)
theta <- 2
f <- a*R^(theta)/(1+a*d*R^theta)
points(R,f, type='l',col='red')
theta <- 1
f <- a*R^(theta)/(1+a*d*R^theta)
points(R,f, type='l',col='blue')
### Started 10 July 2011 ###
### By Lizzie & Megan ###
## VarEnvironments & Coexistence ##
# define all parameters
n <- 2    # number of spp
nyrs <- 10  # number of yrs
ndays <- 10  # number of days in a growing season
dt <- 0.001 # within yr timestep
##
## species characteristics
##
b <-  c(1,1)          # biomass of seedling
s <-  c(0.8,0.8)      # seedbank survival overwinter
a <-  c(20,20)        # slope of species uptake rate with increasing R
d <-  c(1,1)          # inverse of the max uptake rate
c <-  c(12,12)        # conversion of resource to biomass
m <-  c(0.05,.05)     # mortality
G <-  c(0.5, 0.5)     # max germination fraction
h <-  100             # max rate of germination decrease following pulse
phi <- c(0.05,0.05)     # conversion of end-of-season plant biomass to seeds
tauI <- c(0.35, 0.4)    # time of max germ for sp i
theta <- c(1,1)         # shape of species i uptake curve
N0 <- c(10,10)          # initial number of seeds
Rstar <- (m/(a*(c-m*d)))^(1/theta)
##
## time-varying env variables
##
R0 <- matrix(rep(5), nyrs,1) # rlnorm(nyrs, 1, 1) # intial R in a season
eps <- 1              # evaporative stress
tauP <- 0.3           # timing of pulse
##
## Within-growing season dynamics set-up
##
R <- matrix(rep(0), nyrs, ndays/dt) # R is the resource level through the growing season (each yr)
B <- array(rep(0), dim=c(nyrs,n,ndays/dt)) # where B is an array with yr (nyrs), spp biomass
# through growing season (ndays)
N <- matrix(rep(0), nyrs, n) # number of seeds by yr and spp
Bfin <- matrix(rep(0),nyrs,n) # biomass at end of year y
##
## change to mapply someday?
## for now, a loop
## Better to use ODE solver within each year?
##
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t))
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f + eps*R[y,t-1])
J <- which(R[y, t-1]-Rstar < 0)
B[y,,t][J] <- 0
}
Bfin[y,] <- apply(B[y,,], 1, max)
}
Rstar
Bfin <- matrix(rep(0),nyrs,nsp)
nsp=2
Bfin <- matrix(rep(0),nyrs,nsp)
Bfin
### Started 10 July 2011 ###
### By Lizzie & Megan ###
## VarEnvironments & Coexistence ##
# define all parameters
nsp <- 2    # number of spp
nyrs <- 10  # number of yrs
ndays <- 10  # number of days in a growing season
dt <- 0.001 # within yr timestep
##
## species characteristics
##
b <-  c(1,1)          # biomass of seedling
s <-  c(0.8,0.8)      # seedbank survival overwinter
a <-  c(20,20)        # slope of species uptake rate with increasing R
d <-  c(1,1)          # inverse of the max uptake rate
c <-  c(12,12)        # conversion of resource to biomass
m <-  c(0.05,.05)     # mortality
G <-  c(0.5, 0.5)     # max germination fraction
h <-  100             # max rate of germination decrease following pulse
phi <- c(0.05,0.05)     # conversion of end-of-season plant biomass to seeds
tauI <- c(0.35, 0.4)    # time of max germ for sp i
theta <- c(1,1)         # shape of species i uptake curve
N0 <- c(10,10)          # initial number of seeds
Rstar <- (m/(a*(c-m*d)))^(1/theta)
##
## time-varying env variables
##
R0 <- matrix(rep(5), nyrs,1) # rlnorm(nyrs, 1, 1) # intial R in a season
eps <- 1              # evaporative stress
tauP <- 0.3           # timing of pulse
##
## Within-growing season dynamics set-up
##
R <- matrix(rep(0), nyrs, ndays/dt) # R is the resource level through the growing season (each yr)
B <- array(rep(0), dim=c(nyrs,nsp,ndays/dt)) # where B is an array with yr (nyrs), spp biomass
# through growing season (ndays)
N <- matrix(rep(0), nyrs, nsp) # number of seeds by yr and spp
Bfin <- matrix(rep(0),nyrs,nsp) # biomass at end of year y
##
## change to mapply someday?
## for now, a loop
## Better to use ODE solver within each year?
##
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t)) #what is this for?
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f - eps*R[y,t-1])
#J <- which(R[y, t-1]-Rstar < 0)
#  B[y,,t][J] <- 0
}
Bfin[y,] <- apply(B[y,,], 1, max)
}
B
str(B)
### Started 10 July 2011 ###
### By Lizzie & Megan ###
## VarEnvironments & Coexistence ##
# define all parameters
nsp <- 2    # number of spp
nyrs <- 10  # number of yrs
ndays <- 10  # number of days in a growing season
dt <- 0.001 # within yr timestep
##
## species characteristics
##
b <-  c(1,1)          # biomass of seedling
s <-  c(0.8,0.8)      # seedbank survival overwinter
a <-  c(20,20)        # slope of species uptake rate with increasing R
d <-  c(1,1)          # inverse of the max uptake rate
c <-  c(12,12)        # conversion of resource to biomass
m <-  c(0.05,.05)     # mortality
G <-  c(0.5, 0.5)     # max germination fraction
h <-  100             # max rate of germination decrease following pulse
phi <- c(0.05,0.05)     # conversion of end-of-season plant biomass to seeds
tauI <- c(0.35, 0.4)    # time of max germ for sp i
theta <- c(1,1)         # shape of species i uptake curve
N0 <- c(10,10)          # initial number of seeds
Rstar <- (m/(a*(c-m*d)))^(1/theta)
##
## time-varying env variables
##
R0 <- matrix(rep(5), nyrs,1) # rlnorm(nyrs, 1, 1) # intial R in a season
eps <- 1              # evaporative stress
tauP <- 0.3           # timing of pulse
##
## Within-growing season dynamics set-up
##
R <- matrix(rep(0), nyrs, ndays/dt) # R is the resource level through the growing season (each yr)
B <- array(rep(0), dim=c(nyrs,nsp,ndays/dt)) # where B is an array with yr (nyrs), spp biomass
# through growing season (ndays)
N <- matrix(rep(0), nyrs, nsp) # number of seeds by yr and spp
Bfin <- matrix(rep(0),nyrs,nsp) # biomass at end of year y
##
## change to mapply someday?
## for now, a loop
## Better to use ODE solver within each year?
##
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t)) #what is this for?
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f - eps*R[y,t-1])
#J <- which(R[y, t-1]-Rstar < 0)
#  B[y,,t][J] <- 0
}
Bfin[y,] <- apply(B[y,,], 3, max)
}
apply(B[y,,], 3, max)
max(B[y,,])
Bfin
B
str(B)
apply(B[y,,],1,max)
apply(B[y,,],1,fun=max)
apply(B[y,,],1,FUN=max)
apply(B[y,,],2,FUN=max)
apply(B[y,],1,FUN=max)
y
y <- c(1:nyrs)
apply(B[y,,],1,FUN=max)
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t)) #what is this for?
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f - eps*R[y,t-1])
#J <- which(R[y, t-1]-Rstar < 0)
#  B[y,,t][J] <- 0
}
print(y)
Bfin[y,] <- apply(B[y,,], 1, max)
}
### Started 10 July 2011 ###
### By Lizzie & Megan ###
## VarEnvironments & Coexistence ##
# define all parameters
nsp <- 2    # number of spp
nyrs <- 10  # number of yrs
ndays <- 10  # number of days in a growing season
dt <- 0.001 # within yr timestep
y <- c(1:nyrs)
##
## species characteristics
##
b <-  c(1,1)          # biomass of seedling
s <-  c(0.8,0.8)      # seedbank survival overwinter
a <-  c(20,20)        # slope of species uptake rate with increasing R
d <-  c(1,1)          # inverse of the max uptake rate
c <-  c(12,12)        # conversion of resource to biomass
m <-  c(0.05,.05)     # mortality
G <-  c(0.5, 0.5)     # max germination fraction
h <-  100             # max rate of germination decrease following pulse
phi <- c(0.05,0.05)     # conversion of end-of-season plant biomass to seeds
tauI <- c(0.35, 0.4)    # time of max germ for sp i
theta <- c(1,1)         # shape of species i uptake curve
N0 <- c(10,10)          # initial number of seeds
Rstar <- (m/(a*(c-m*d)))^(1/theta)
##
## time-varying env variables
##
R0 <- matrix(rep(5), nyrs,1) # rlnorm(nyrs, 1, 1) # intial R in a season
eps <- 1              # evaporative stress
tauP <- 0.3           # timing of pulse
##
## Within-growing season dynamics set-up
##
R <- matrix(rep(0), nyrs, ndays/dt) # R is the resource level through the growing season (each yr)
B <- array(rep(0), dim=c(nyrs,nsp,ndays/dt)) # where B is an array with yr (nyrs), spp biomass
# through growing season (ndays)
N <- matrix(rep(0), nyrs, nsp) # number of seeds by yr and spp
Bfin <- matrix(rep(0),nyrs,nsp) # biomass at end of year y
##
## change to mapply someday?
## for now, a loop
## Better to use ODE solver within each year?
##
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t)) #what is this for?
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f - eps*R[y,t-1])
#J <- which(R[y, t-1]-Rstar < 0)
#  B[y,,t][J] <- 0
}
print(y)
Bfin[y,] <- apply(B[y,,], 1, max)
}
min(Rstar)
g <- G*exp(-h*(tauP-tauI)^2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
rem(y)
rm(y)
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)^2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t)) #what is this for?
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f - eps*R[y,t-1])
#J <- which(R[y, t-1]-Rstar < 0)
#  B[y,,t][J] <- 0
}
print(y)
Bfin[y,] <- apply(B[y,,], 1, max)
}
### Started 10 July 2011 ###
### By Lizzie & Megan ###
## VarEnvironments & Coexistence ##
# define all parameters
nsp <- 2    # number of spp
nyrs <- 10  # number of yrs
ndays <- 10  # number of days in a growing season
dt <- 0.001 # within yr timestep
y <- c(1:nyrs)
##
## species characteristics
##
b <-  c(1,1)          # biomass of seedling
s <-  c(0.8,0.8)      # seedbank survival overwinter
a <-  c(20,20)        # slope of species uptake rate with increasing R
d <-  c(1,1)          # inverse of the max uptake rate
c <-  c(12,12)        # conversion of resource to biomass
m <-  c(0.05,.05)     # mortality
G <-  c(0.5, 0.5)     # max germination fraction
h <-  100             # max rate of germination decrease following pulse
phi <- c(0.05,0.05)     # conversion of end-of-season plant biomass to seeds
tauI <- c(0.35, 0.4)    # time of max germ for sp i
theta <- c(1,1)         # shape of species i uptake curve
N0 <- c(10,10)          # initial number of seeds
Rstar <- (m/(a*(c-m*d)))^(1/theta)
##
## time-varying env variables
##
R0 <- matrix(rep(5), nyrs,1) # rlnorm(nyrs, 1, 1) # intial R in a season
eps <- 1              # evaporative stress
tauP <- 0.3           # timing of pulse
##
## Within-growing season dynamics set-up
##
R <- matrix(rep(0), nyrs, ndays/dt) # R is the resource level through the growing season (each yr)
B <- array(rep(0), dim=c(nyrs,nsp,ndays/dt)) # where B is an array with yr (nyrs), spp biomass
# through growing season (ndays)
N <- matrix(rep(0), nyrs, nsp) # number of seeds by yr and spp
Bfin <- matrix(rep(0),nyrs,nsp) # biomass at end of year y
##
## change to mapply someday?
## for now, a loop
## Better to use ODE solver within each year?
##
for (y in c(1:nyrs)){
g <- G*exp(-h*(tauP-tauI)^2)
t <- 1
R[y,t] <- R0[y]
print(y)
if(y==1) N[y,] <- N0
else N[y,] <- s*(N[y-1,]*(1-g)+phi*Bfin[y-1,])
B[y,, t] <- b*g*N[y,]
f <- (a*R[y,1]^theta)/(1+a*d*R[y,1]^theta)
print(f)
while (R[y,t]>min(Rstar)){
t <- t+1
f <- (a*R[y,t-1]^theta)/(1+a*d*R[y,t-1]^theta)
if((sum(c*f<m)>0)) print(paste("c*f-m=", c*f-m,", t=",t)) #what is this for?
B[y,,t] <- B[y,,t-1]+(c*f-m)*B[y,,t-1]*dt
R[y,t] <- R[y, t-1]-dt*(t(B[y,,t-1]) %*% f - eps*R[y,t-1])
#J <- which(R[y, t-1]-Rstar < 0)
#  B[y,,t][J] <- 0
}
print(y)
Bfin[y,] <- apply(B[y,,], 1, max)
}
plot(B)
dim(B)
plot(B,t)
plot(B~t)
dim(t)
size(t)
tsteps <- ndays/dt
tsteps
t <-c(1:tsteps)
plot(B~t)
plot(B[,,]~t)
dim(B)
dim(t)
